Optics is a very broad and amazing topic. We're currently using basic ideas such as keyPath as functions and enum properties (prism) to simplify
the syntax. The main advantage of using optics is thinking about getters and setters as functions that traverse a root structure to a property,
allowing either retrieving its value or setting a new value and return the modified structure.

When traversing complex object trees this is very useful!

About keyPaths as functions, Swift 5.2 is expected to bring this feature natively (SE-0249), but in meantime it's very easy to create a custom
operator to implement this behaviour.

This is very powerful for structs, but unfortunately Swift doesn't synthesize keyPaths for Enums, but it's not so hard through code-generation to
create properties out of enum cases, and the compiler will then provide keyPaths for each property.

The Sourcery template we use can be downloaded from here:
https://github.com/luizmb/DogProfiler/blob/master/DogProfiler/Sourcery/Prism.generated.swift
